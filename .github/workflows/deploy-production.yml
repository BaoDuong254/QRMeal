name: Deploy Production

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: 22.20.0
          cache: "npm"
      - name: Create .env file
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env
      - name: Clean node_modules & lockfile
        run: |
          rm -rf node_modules package-lock.json .next
      - name: Install deps (clean)
        run: npm install --force
      - run: npm run build
      - name: send telegram message after build success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Build client completed successfully.
            👤 ${{ github.actor }} created commit:
            🧑‍💻 Commit message: ${{ github.event.commits[0].message }}
            📦 Repository: ${{ github.repository }}
            👀 See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: send telegram message after build failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Build client failed.
            👤 ${{ github.actor }} created commit:
            🧑‍💻 Commit message: ${{ github.event.commits[0].message }}
            📦 Repository: ${{ github.repository }}
            👀 See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Execute SSH commands using password
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.HOST_VPS }}
          username: ${{ secrets.USERNAME_VPS }}
          password: ${{ secrets.PASSWORD_VPS }}
          port: ${{ secrets.PORT_VPS }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ~/qrmeal/client
            git fetch --all
            git reset --hard origin/main
            echo "${{ secrets.ENV_PRODUCTION }}" > .env
            rm -rf node_modules package-lock.json .next
            npm install --force
            npm run build
            pm2 restart qrmeal-client
      - name: send telegram message after deploy success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Deployment client completed successfully.
            👤 ${{ github.actor }} created commit:
            🧑‍💻 Commit message: ${{ github.event.commits[0].message }}
            📦 Repository: ${{ github.repository }}
            👀 See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: send telegram message after deploy failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Deployment client failed.
            👤 ${{ github.actor }} created commit:
            🧑‍💻 Commit message: ${{ github.event.commits[0].message }}
            📦 Repository: ${{ github.repository }}
            👀 See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
